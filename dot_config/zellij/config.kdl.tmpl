// vim: set ft=kdl:

keybinds clear-defaults=true {
    normal {
        bind "q" "Ctrl q" { Quit; }
        bind "d" "Ctrl d" { Detach; }
        bind "p" "Ctrl p" { SwitchToMode "pane"; }
        bind "t" "Ctrl t" { SwitchToMode "tab"; }
        bind "m" "Ctrl m" { SwitchToMode "move"; }
        bind "r" "Ctrl r" { SwitchToMode "resize"; }
        bind "z" "Ctrl z" {
            LaunchOrFocusPlugin "plugin-manager" {
                floating true
                move_to_focused_tab true
            }
            SwitchToMode "locked"
        }
        bind "x" "Ctrl x"{
            LaunchOrFocusPlugin "zellij:share" {
                floating true
                move_to_focused_tab true
            }
            SwitchToMode "locked"
        }
        bind "Z" "Ctrl Z"{
            LaunchOrFocusPlugin "session-manager" {
                floating true
                move_to_focused_tab true
            }
            SwitchToMode "locked"
        }
        bind "a" "Ctrl a" {
            NewTab { layout "chezmoi-apply"; }
            SwitchToMode "locked";
        }
    }
    pane {
        bind "-" "Ctrl -" { NewPane "down"; SwitchToMode "locked"; }
        bind "_" "Ctrl _" { NewPane "down"; SwitchToMode "locked"; }
        bind "|" "Ctrl |" { NewPane "right"; SwitchToMode "locked"; }
        bind "\\" "Ctrl \\" { NewPane "right"; SwitchToMode "locked"; }
        bind "s" "Ctrl s" { NewPane "stacked"; SwitchToMode "locked"; }
        bind "r" "Ctrl r" { SwitchToMode "renamepane"; PaneNameInput 0; }
        // Mnemonic: Toggle Breakout
        bind "b" "Ctrl b" { TogglePaneEmbedOrFloating; SwitchToMode "locked"; }
    }
    tab {
        bind "r" "Ctrl r" { SwitchToMode "renametab"; TabNameInput 0; }
        bind "s" "Ctrl s" { ToggleActiveSyncTab; SwitchToMode "locked"; }
        bind "[" "Ctrl [" { BreakPaneLeft; SwitchToMode "locked"; }
        bind "]" "Ctrl ]" { BreakPaneRight; SwitchToMode "locked"; }
        bind "b" "Ctrl b" { BreakPane; SwitchToMode "locked"; }
    }
    resize {
        bind "left" { Resize "Increase left"; }
        bind "down" { Resize "Increase down"; }
        bind "up" { Resize "Increase up"; }
        bind "right" { Resize "Increase right"; }
        bind "+" "Ctrl +" { Resize "Increase"; }
        bind "=" "Ctrl =" { Resize "Increase"; }
        bind "-" "Ctrl -" { Resize "Decrease"; }
        bind "_" "Ctrl _" { Resize "Decrease"; }
        bind "h" "Ctrl h" { Resize "Increase left"; }
        bind "j" "Ctrl j" { Resize "Increase down"; }
        bind "k" "Ctrl k" { Resize "Increase up"; }
        bind "l" "Ctrl l" { Resize "Increase right"; }
    }
    move {
        bind "left" { MovePane "left"; }
        bind "down" { MovePane "down"; }
        bind "up" { MovePane "up"; }
        bind "right" { MovePane "right"; }
        bind "h" "Ctrl h" { MovePane "left"; }
        bind "j" "Ctrl j" { MovePane "down"; }
        bind "k" "Ctrl k" { MovePane "up"; }
        bind "l" "Ctrl l" { MovePane "right"; }
        bind "n" "Ctrl n" { MovePane; }
        bind "p" "Ctrl p" { MovePaneBackwards; }
        bind "Shift Ctrl h" { MoveTab "left"; }
        bind "Shift Ctrl l" { MoveTab "right"; }
        bind "[" "Ctrl [" { PreviousSwapLayout; }
        bind "]" "Ctrl ]" { NextSwapLayout; }
    }
    search {
        bind "n" { Search "down"; }
        bind "N" { Search "up"; }
        bind "p" { Search "up"; }
        bind "c" { SearchToggleOption "CaseSensitivity"; }
        bind "w" { SearchToggleOption "Wrap"; }
        bind "o" { SearchToggleOption "WholeWord"; }
        bind "/" { SwitchToMode "entersearch"; SearchInput 0; }
        bind "e" { EditScrollback; SwitchToMode "locked"; }
        bind "PageDown" { PageScrollDown; }
        bind "PageUp" { PageScrollUp; }
        bind "left" { PageScrollUp; }
        bind "down" { ScrollDown; }
        bind "up" { ScrollUp; }
        bind "right" { PageScrollDown; }
        bind "h" { PageScrollUp; }
        bind "l" { PageScrollDown; }
        bind "j" { ScrollDown; }
        bind "k" { ScrollUp; }
        bind "Ctrl f" { PageScrollDown; }
        bind "Ctrl b" { PageScrollUp; }
        bind "Ctrl c" { ScrollToBottom; SwitchToMode "locked"; }
        bind "Esc" { ScrollToBottom; SwitchToMode "locked"; }
        bind "d" "Ctrl d" { HalfPageScrollDown; }
        bind "u" "Ctrl u" { HalfPageScrollUp; }
    }
    entersearch {
        // TODO: I want to clear the line with Ctrl-u. Create issue
        bind "enter" { SwitchToMode "search"; SearchToggleOption "CaseSensitivity"; }
    }
    renametab {
        bind "Esc" { UndoRenameTab; SwitchToMode "locked"; }
        bind "Ctrl c" { UndoRenameTab; SwitchToMode "locked"; }
    }
    renamepane {
        bind "Esc" { UndoRenamePane; SwitchToMode "locked"; }
        bind "Ctrl c" { UndoRenamePane; SwitchToMode "locked"; }
    }
    shared_except "locked" "entersearch" {
        bind "enter" { SwitchToMode "locked"; }
    }
    shared_except "locked" "search" "renametab" "renamepane" {
        bind "Esc" { SwitchToMode "locked"; }
        bind "Ctrl c" { SwitchToMode "locked"; }
    }
    shared_except "normal" {
        bind "Ctrl space" { SwitchToMode "normal"; }
    }
    shared_among "locked" "normal" {
        bind "Ctrl h" { MoveFocus "left"; SwitchToMode "locked"; }
        bind "Ctrl l" { MoveFocus "right"; SwitchToMode "locked"; }
        bind "Ctrl j" { MoveFocus "down"; SwitchToMode "locked"; }
        bind "Ctrl k" { MoveFocus "up"; SwitchToMode "locked"; }
        bind "Ctrl s" { ToggleFloatingPanes; SwitchToMode "locked"; }
        bind "Ctrl =" "Ctrl +" { Resize "Increase"; SwitchToMode "locked"; }
        bind "Ctrl -" "Ctrl _" { Resize "Decrease"; SwitchToMode "locked"; }
        bind "Super t" { NewTab; SwitchToMode "locked"; }
        bind "Super d" { NewPane; SwitchToMode "locked"; }
        bind "Super w" { CloseFocus; SwitchToMode "locked"; }
        bind "Super [" { GoToPreviousTab; SwitchToMode "locked"; }
        bind "Super ]" { GoToNextTab; SwitchToMode "locked"; }
        bind "Super Alt Left" { GoToPreviousTab; SwitchToMode "locked"; }
        bind "Super Alt Right" { GoToNextTab; SwitchToMode "locked"; }
        bind "Ctrl Tab" { ToggleTab; SwitchToMode "locked"; }
        // TODO: make this case sensitive by default. PR needed
        bind "Super f" { SwitchToMode "entersearch"; SearchInput 0; }
        bind "Super 1" { GoToTab 1; SwitchToMode "locked"; }
        bind "Super 2" { GoToTab 2; SwitchToMode "locked"; }
        bind "Super 3" { GoToTab 3; SwitchToMode "locked"; }
        bind "Super 4" { GoToTab 4; SwitchToMode "locked"; }
        bind "Super 5" { GoToTab 5; SwitchToMode "locked"; }
        bind "Super 6" { GoToTab 6; SwitchToMode "locked"; }
        bind "Super 7" { GoToTab 7; SwitchToMode "locked"; }
        bind "Super 8" { GoToTab 8; SwitchToMode "locked"; }
        bind "Super 9" { GoToTab 9; SwitchToMode "locked"; }
        // Clear zellij's scrollback and redraw prompt
        bind "Super k" { Clear; WriteChars "clear\n"; SwitchToMode "locked"; }
        bind "Super Enter" { ToggleFocusFullscreen; SwitchToMode "locked"; }
        bind "Shift Ctrl h" { MoveTab "left"; }
        bind "Shift Ctrl l" { MoveTab "right"; }
    }
}

// Plugin aliases - can be used to change the implementation of Zellij
// changing these requires a restart to take effect
plugins {
    about location="zellij:about"
    compact-bar location="zellij:compact-bar"
    configuration location="zellij:configuration"
    filepicker location="zellij:strider" {
        cwd "/"
    }
    plugin-manager location="zellij:plugin-manager"
    session-manager location="zellij:session-manager"
    status-bar location="zellij:status-bar"
    strider location="zellij:strider"
    tab-bar location="zellij:tab-bar"
    welcome-screen location="zellij:session-manager" {
        welcome_screen true
    }
    zjstatus location="https://github.com/dj95/zjstatus/releases/latest/download/zjstatus.wasm" {
        color_base "0"
        color_blue "4"
        color_grey "19"
        color_light-grey "20"
        color_white "#a5adce"
        command_hostname_command "hostname"
        command_hostname_format "#[fg=$white,bg=$grey] {stdout}  "
        command_hostname_interval "60"
        command_hostname_rendermode "static"
        datetime "#[fg=$white,bg=$grey] {format}  "
        datetime_format "%H:%M"
        datetime_timezone "Europe/Berlin"
        format_hide_on_overlength true
        format_left "{tabs}"
        format_precedence "lrc"
        format_right "#[fg=$grey,bg=$base]#[bg=$grey] {pipe_prog}{command_hostname}{datetime}#[fg=$white,bg=$grey]󰄷 {session}#[bg=$grey] #[fg=$grey,bg=$base]"
        format_space ""
        hide_frame_except_for_search true
        pipe_prog_format "#[fg=$white,bg=$grey] {output}  "
        pipe_prog_rendermode "static"
        tab_active "#[fg=$grey,bg=$base]#[fg=$blue,bg=$grey,bold] {name}{floating_indicator}{fullscreen_indicator}{sync_indicator} #[fg=$grey,bg=$base]"
        tab_display_count "10"
        tab_floating_indicator " 󰹙"
        tab_fullscreen_indicator " 󰊓"
        tab_normal "#[fg=$grey,bg=$base]#[fg=$light-grey,bg=$grey,bold] {name}{floating_indicator}{fullscreen_indicator}{sync_indicator} #[fg=$grey,bg=$base]"
        tab_separator " "
        tab_sync_indicator " "
        tab_truncate_end_format "#[fg=$white] ..."
        tab_truncate_start_format "#[fg=$white]... "
    }
}

// Plugins to load in the background when a new session starts
load_plugins {
}

// Web client configuration
web_client {
    font "monospace"
}
 
// Use a simplified UI without special fonts (arrow glyphs)
{{- if .nerdfonts }}
simplified_ui false
{{- else }}
simplified_ui true
{{- end }}
 
// Choose the theme that is specified in the themes section.
theme "catppuccin-frappe"
 
// Choose the base input mode of zellij.
default_mode "locked"
 
// Choose the path to override cwd that zellij will use for opening new panes
// default_cwd "/tmp"
 
// The name of the default layout to load on startup
// default_layout "compact"
 
// Toggle having pane frames around the panes
pane_frames false
 
// When attaching to an existing session with other users,
// should the session be mirrored (true)
// or should each user have their own cursor (false)
// (Requires restart)
mirror_session false
 
// Choose what to do when zellij receives SIGTERM, SIGINT, SIGQUIT or SIGHUP
// eg. when terminal window with an active zellij session is closed
// (Requires restart)
// Options:
//   - detach (Default)
//   - quit
on_force_close "detach"
 
// Configure the scroll back buffer size
// This is the number of lines zellij stores for each pane in the scroll back
// buffer. Excess number of lines are discarded in a FIFO fashion.
// (Requires restart)
// Valid values: positive integers
scroll_buffer_size 10000
 
// Provide a command to execute when copying text. The text will be piped to
// the stdin of the program to perform the copy. This can be used with
// terminal emulators which do not support the OSC 52 ANSI control sequence
// that will be used by default if this option is not set.
// Examples:
// copy_command "xclip -selection clipboard" // x11
// copy_command "wl-copy"                    // wayland
// copy_command "pbcopy"                     // osx
 
// Choose the destination for copied text. Allows using the primary selection
// buffer (on x11/wayland) instead of the system clipboard. Does not apply when
// using copy_command. Options: system, primary
copy_clipboard "system"
 
// Enable automatic copying (and clearing) of selection when releasing mouse
copy_on_select true
 
// A fixed name to always give the Zellij session.
// Consider also setting `attach_to_session true,`
// otherwise this will error if such a session exists.
// Default: <RANDOM>
session_name "Default"
 
// When `session_name` is provided, attaches to that session
// if it is already running or creates it otherwise.
attach_to_session true
 
// Toggle between having Zellij lay out panes according to a predefined set of
// layouts whenever possible
auto_layout true
 
// Whether sessions should be serialized to the cache folder (including their
// tabs/panes, cwds and running commands) so that they can later be resurrected
session_serialization true
 
// Whether pane viewports are serialized along with the session, default is false
serialize_pane_viewport false
 
// Scrollback lines to serialize along with the pane viewport when serializing
// sessions, 0 defaults to the scrollback size. If this number is higher than
// the scrollback size, it will also default to the scrollback size. This does
// nothing if `serialize_pane_viewport` is not true.
scrollback_lines_to_serialize 0
 
// Enable or disable the rendering of styled and colored underlines (undercurl).
// May need to be disabled for certain unsupported terminals
styled_underlines true
 
// How often in seconds sessions are serialized
// serialization_interval 10000
 
// Enable or disable writing of session metadata to disk (if disabled, other
// sessions might not know metadata info on this session)
disable_session_metadata false
 
// Enable or disable support for the enhanced Kitty Keyboard Protocol (the host
// terminal must also support it)
support_kitty_keyboard_protocol true

// Whether to make sure a local web server is running when a new Zellij session
// starts. This web server will allow creating new sessions and attaching to
// existing ones that have opted in to being shared in the browser.
// When enabled, navigate to http://127.0.0.1:8082
// Note: a local web server can still be manually started from within a Zellij
// session or from the CLI. If this is not desired, one can use a version of
// Zellij compiled without `web_server_capability`
web_server false

// Whether to allow sessions started in the terminal to be shared through a
// local web server, assuming one is running (see the `web_server` option for
// more details). Note: This is an administrative separation and not intended as
// a security measure.
// Possible values:
// - "on" (allow web sharing through the local web server if it is online)
// - "off" (do not allow web sharing unless sessions explicitly opt-in to it)
// - "disabled" (do not allow web sharing and do not permit sessions started in
// the terminal to opt-in to it)
web_sharing "off"

// A path to a certificate file to be used when setting up the web client to
// serve the connection over HTTPs
// web_server_cert "/path/to/cert.pem"

// A path to a key file to be used when setting up the web client to serve the
// connection over HTTPs
// web_server_key "/path/to/key.pem"

// Whether to enforce https connections to the web server when it is bound to
// localhost (127.0.0.0/8). Note: https is ALWAYS enforced when bound to
// non-local interfaces enforce_https_for_localhost false
 
// Whether to stack panes when resizing beyond a certain size
stacked_resize true
 
// Whether to show tips on startup
show_startup_tips false
 
// Whether to show release notes on first version run
show_release_notes true
 
// Whether to enable mouse hover effects and pane grouping functionality
advanced_mouse_actions true
 
// The ip address the web server should listen on when it starts
// web_server_ip "127.0.0.1"
 
// The port the web server should listen on when it starts
// web_server_port 8083
